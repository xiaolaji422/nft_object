// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"nft_object/app/core"
	"nft_object/app/dao/internal"
	"nft_object/app/model"

	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/util/gconv"
)

// roleDao is the manager for logic model data accessing
// and custom defined data operations functions management. You can define
// methods on it to extend its functionality as you wish.
type roleDao struct {
	*internal.RoleDao
}

var (
	// 对外对象
	Role roleDao
)

func init() {
	Role = roleDao{
		internal.NewRoleDao(),
	}
}

// 处理成Struct
func (m *roleDao) Strcut(res gdb.Record) (info *model.Role, err error) {
	if err = res.Struct(&info); err != nil {
		return nil, err
	}
	return
}

// 处理成数组
func (d *roleDao) Strcuts(res gdb.Result) (list []*model.Role, err error) {
	if err = res.Structs(&list); err != nil {
		return nil, err
	}
	return
}

// 分页查询
func (d *roleDao) Pagenation(params map[string]interface{}) (core.PageReult, error) {
	// 分页信息
	res, err := core.BaseDao.PagenationCommon(core.GdbModel{
		M:       d.M,
		DB:      d.DB,
		Table:   d.Table,
		Columns: gconv.Map(model.Role{}),
	}, params)
	if err != nil {
		return res, err
	}
	return res, nil
}
