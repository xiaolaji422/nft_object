// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// AccountLockDao is the manager for logic model data accessing and custom defined data operations functions management.
type AccountLockDao struct {
	gmvc.M                    // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      accountLockColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB             // DB is the raw underlying database management object.
	Table  string             // Table is the underlying table name of the DAO.
}

// AccountLockColumns defines and stores column names for table t_account_lock.
type accountLockColumns struct {
	Id         string // ID
	AdminId    string // 账户id
	AccountId  string // 账号id
	AlbumId    string // 商品id
	AlbumName  string // 商品名称
	Min        string // 最低价格
	Max        string // 最高价格
	CreateTime string // 创建时间
	UpdateTime string // 更新时间
	Enabled    string // 状态描述, 1: 正常使用，0: 删除
}

// NewAccountLockDao creates and returns a new DAO object for table data access.
func NewAccountLockDao() *AccountLockDao {
	columns := accountLockColumns{
		Id:         "id",
		AdminId:    "admin_id",
		AccountId:  "account_id",
		AlbumId:    "album_id",
		AlbumName:  "album_name",
		Min:        "min",
		Max:        "max",
		CreateTime: "create_time",
		UpdateTime: "update_time",
		Enabled:    "enabled",
	}
	return &AccountLockDao{
		C:     columns,
		M:     g.DB("default").Model("t_account_lock").Safe(),
		DB:    g.DB("default"),
		Table: "t_account_lock",
	}
}
